---
openapi: 3.0.1
info:
  title: My API
  version: v1
paths:
  "/api/v1/{publicationId}/comments":
    post:
      tags:
      - Comment
      summary: Добавление комментария
      parameters:
      - name: publicationId
        in: path
        description: Id поста
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Комментарий
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Comment"
          text/json:
            schema:
              "$ref": "#/components/schemas/Comment"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Comment"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/CommentActionResult"
            application/json:
              schema:
                "$ref": "#/components/schemas/CommentActionResult"
            text/json:
              schema:
                "$ref": "#/components/schemas/CommentActionResult"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
    get:
      tags:
      - Comment
      summary: Постраничное получение комментариев
      parameters:
      - name: publicationId
        in: path
        description: Id поста
        required: true
        style: simple
        schema:
          type: string
      - name: pageNumber
        in: query
        description: Номер запрашиваемой страницы
        style: form
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        description: Количество комментариев на странице
        style: form
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/CommentPagingResultActionResult"
            application/json:
              schema:
                "$ref": "#/components/schemas/CommentPagingResultActionResult"
            text/json:
              schema:
                "$ref": "#/components/schemas/CommentPagingResultActionResult"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
  "/api/v1/feed":
    get:
      tags:
      - Feed
      summary: Получение общей ленты
      parameters:
      - name: pageNumber
        in: query
        description: Номер запрашиваемой страницы
        style: form
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        description: Количество комментариев на странице
        style: form
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/PublicationPagingResultActionResult"
            application/json:
              schema:
                "$ref": "#/components/schemas/PublicationPagingResultActionResult"
            text/json:
              schema:
                "$ref": "#/components/schemas/PublicationPagingResultActionResult"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
  "/api/v1/images/{publicationId}":
    post:
      tags:
      - File
      summary: Загрузить изображение в форму редактирования поста
      parameters:
      - name: publicationId
        in: path
        description: Id поста
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Изображение в виде массива байт
        content:
          application/json:
            schema:
              type: string
              format: byte
          text/json:
            schema:
              type: string
              format: byte
          application/*+json:
            schema:
              type: string
              format: byte
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/StringActionResult"
            application/json:
              schema:
                "$ref": "#/components/schemas/StringActionResult"
            text/json:
              schema:
                "$ref": "#/components/schemas/StringActionResult"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
  "/api/v1/publications":
    post:
      tags:
      - Publication
      summary: Добавить пост
      requestBody:
        description: Пост
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Publication"
          text/json:
            schema:
              "$ref": "#/components/schemas/Publication"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Publication"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/UriActionResult"
            application/json:
              schema:
                "$ref": "#/components/schemas/UriActionResult"
            text/json:
              schema:
                "$ref": "#/components/schemas/UriActionResult"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
  "/api/v1/publications/{publicationId}":
    get:
      tags:
      - Publication
      summary: Получить пост по Id
      parameters:
      - name: publicationId
        in: path
        description: Id поста
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/PublicationActionResult"
            application/json:
              schema:
                "$ref": "#/components/schemas/PublicationActionResult"
            text/json:
              schema:
                "$ref": "#/components/schemas/PublicationActionResult"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
  "/api/v1/publications/search":
    get:
      tags:
      - Publication
      summary: Поиск поста
      parameters:
      - name: searchText
        in: query
        description: ''
        style: form
        schema:
          type: string
      - name: radius
        in: query
        description: ''
        style: form
        schema:
          type: string
      - name: latitude
        in: query
        description: ''
        style: form
        schema:
          type: number
          format: double
      - name: longitude
        in: query
        description: ''
        style: form
        schema:
          type: number
          format: double
      - name: pageNumber
        in: query
        description: ''
        style: form
        schema:
          type: string
      - name: pageSize
        in: query
        description: ''
        style: form
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/PublicationPagingResultActionResult"
            application/json:
              schema:
                "$ref": "#/components/schemas/PublicationPagingResultActionResult"
            text/json:
              schema:
                "$ref": "#/components/schemas/PublicationPagingResultActionResult"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
  "/api/v1/subscriptions":
    get:
      tags:
      - Subscription
      summary: Получение подписок
      parameters:
      - name: pageNumber
        in: query
        description: Номер запрашиваемой страницы
        style: form
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        description: Количество комментариев на странице
        style: form
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/PublicationPagingResultActionResult"
            application/json:
              schema:
                "$ref": "#/components/schemas/PublicationPagingResultActionResult"
            text/json:
              schema:
                "$ref": "#/components/schemas/PublicationPagingResultActionResult"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApiError"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApiError"
components:
  schemas:
    ActionResult:
      type: object
      additionalProperties: false
    ApiError:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        errorCode:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        timestamp:
          type: string
          format: date-time
      additionalProperties: false
      description: Объект с описанием ошибки
    Comment:
      type: object
      properties:
        id:
          type: string
          description: Бла бла
          nullable: true
        text:
          type: string
          nullable: true
        authorName:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
      additionalProperties: false
    CommentActionResult:
      type: object
      properties:
        result:
          "$ref": "#/components/schemas/ActionResult"
        value:
          "$ref": "#/components/schemas/Comment"
      additionalProperties: false
    CommentPagingResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
          nullable: true
        nextPage:
          type: integer
          format: int32
          nullable: true
        totalItems:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            "$ref": "#/components/schemas/Comment"
          nullable: true
      additionalProperties: false
    CommentPagingResultActionResult:
      type: object
      properties:
        result:
          "$ref": "#/components/schemas/ActionResult"
        value:
          "$ref": "#/components/schemas/CommentPagingResult"
      additionalProperties: false
    Coordinates:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
      additionalProperties: false
    Publication:
      type: object
      properties:
        id:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        publishDate:
          type: string
          format: date-time
        fileIds:
          type: array
          items:
            type: string
          nullable: true
        coordinates:
          "$ref": "#/components/schemas/Coordinates"
        userId:
          type: string
          nullable: true
      additionalProperties: false
    PublicationActionResult:
      type: object
      properties:
        result:
          "$ref": "#/components/schemas/ActionResult"
        value:
          "$ref": "#/components/schemas/Publication"
      additionalProperties: false
    PublicationPagingResult:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
          nullable: true
        nextPage:
          type: integer
          format: int32
          nullable: true
        totalItems:
          type: integer
          format: int32
          nullable: true
        items:
          type: array
          items:
            "$ref": "#/components/schemas/Publication"
          nullable: true
      additionalProperties: false
    PublicationPagingResultActionResult:
      type: object
      properties:
        result:
          "$ref": "#/components/schemas/ActionResult"
        value:
          "$ref": "#/components/schemas/PublicationPagingResult"
      additionalProperties: false
    StringActionResult:
      type: object
      properties:
        result:
          "$ref": "#/components/schemas/ActionResult"
        value:
          type: string
          nullable: true
      additionalProperties: false
    UriActionResult:
      type: object
      properties:
        result:
          "$ref": "#/components/schemas/ActionResult"
        value:
          type: string
          format: uri
          nullable: true
      additionalProperties: false
